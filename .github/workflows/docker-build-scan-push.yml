name: Docker build, scan & push

on:
  workflow_call:
    inputs:
      context:
        required: true
        type: string
      dockerfile:
        required: true
        type: string
      buildargs:
        required: true
        type: string
      image:
        required: true
        type: string
      tag:
        required: true
        type: string
      scan:
        required: true
        type: string
      push:
        required: true
        type: string

jobs:
  docker-build-scan-push:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
          images: |
            ${{ inputs.image }}
          tags: |
            type=raw,value=${{ inputs.tag }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build image and export to Docker
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.dockerfile }}
        build-args: ${{ inputs.buildargs }}
        #platforms: linux/amd64, linux/arm64/v8
        platforms: linux/amd64
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha,scope=${{ inputs.image }}
        cache-to: type=gha,mode=max,scope=${{ inputs.image }}
        pull: true

    - name: Load linux/amd64 image to Docker
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.dockerfile }}
        platforms: linux/amd64
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        load: true

    - name: Run Trivy vulnerability scanner
      if: ${{ inputs.scan == 'true' }}
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ steps.meta.outputs.tags }}
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
    
    - name: Push image
      if: ${{ inputs.push == 'true' }}
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.dockerfile }}
        build-args: ${{ inputs.buildargs }}
        #platforms: linux/amd64, linux/arm64/v8
        platforms: linux/amd64
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha,scope=${{ inputs.image }}
        cache-to: type=gha,mode=max,scope=${{ inputs.image }}
        pull: true
        push: true
